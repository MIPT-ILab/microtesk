/*
 * Copyright (c) ISPRAS
 * 
 * Institute for System Programming of Russian Academy of Sciences
 * 
 * 25 Alexander Solzhenitsyn st. Moscow 109004 Russia
 * 
 * All rights reserved.
 * 
 * This file was automatically generated by MicroTEST based on the
 * information contained in the 'large_addr.nml' specification file.
 * 
 * N.B. PLEASE DO NOT MODIFY THIS FILE.
 */

package ru.ispras.microtesk.model.large_addr.shared;

import java.math.BigInteger;
import ru.ispras.microtesk.model.api.type.TypeId;
import ru.ispras.microtesk.model.api.type.Type;
import ru.ispras.microtesk.model.api.memory.Memory;
import ru.ispras.microtesk.model.api.memory.Label;
import ru.ispras.microtesk.model.api.state.Status;
import ru.ispras.microtesk.model.api.state.Resetter;

public final class Shared {
  private Shared() {}

  public static final Type WORD48 = Type.def("WORD48", Type.CARD(0x30));
  public static final Type WORD64 = Type.def("WORD64", Type.CARD(0x40));

  public static final Memory GPR48 = Memory.def(Memory.Kind.REG, "GPR48", WORD48, 0x30);
  public static final Memory GPR64 = Memory.def(Memory.Kind.REG, "GPR64", WORD64, 0x40);
  public static final Memory M48 = Memory.def(Memory.Kind.MEM, "M48", WORD48, 0x1000000000000L);
  public static final Memory M64 = Memory.def(Memory.Kind.MEM, "M64", WORD64, new BigInteger("10000000000000000", 16));

  public static final Memory[] __REGISTERS = {GPR48, GPR64};
  public static final Memory[] __MEMORY = {M48, M64};
  public static final Memory[] __VARIABLES = {};
  public static final Label[] __LABELS = {};

  public static final Status __CTRL_TRANSFER = new Status("__CTRL_TRANSFER", 0);
  public static final Status[] __STATUSES = {__CTRL_TRANSFER};

  public static final Resetter __RESETTER = new Resetter(__VARIABLES, __STATUSES);
}
 