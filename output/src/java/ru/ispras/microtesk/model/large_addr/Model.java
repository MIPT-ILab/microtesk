/*
 * Copyright (c) ISPRAS
 * 
 * Institute for System Programming of Russian Academy of Sciences
 * 
 * 25 Alexander Solzhenitsyn st. Moscow 109004 Russia
 * 
 * All rights reserved.
 * 
 * This file was automatically generated by MicroTEST based on the
 * information contained in the 'large_addr.nml' specification file.
 * 
 * N.B. PLEASE DO NOT MODIFY THIS FILE.
 */

package ru.ispras.microtesk.model.large_addr;

import ru.ispras.microtesk.model.api.ProcessorModel;
import ru.ispras.microtesk.model.api.debug.MetaModelPrinter;
import ru.ispras.microtesk.model.api.debug.ModelStatePrinter;
import ru.ispras.microtesk.model.api.instruction.IAddressingMode;
import ru.ispras.microtesk.model.api.instruction.IOperation;
import ru.ispras.microtesk.model.large_addr.mode.*;
import ru.ispras.microtesk.model.large_addr.op.*;

import static ru.ispras.microtesk.model.large_addr.shared.Shared.*;

public final class Model extends ProcessorModel {
  public static final String NAME = "large_addr";

  private static final IAddressingMode.IInfo[] __MODES = new IAddressingMode.IInfo[] {
    r48.INFO,
    r64.INFO
  };

  private static final IAddressingMode.IInfo[] __MODE_GROUPS = new IAddressingMode.IInfo[] {
  };

  private static final IOperation.IInfo[] __OPS = new IOperation.IInfo[] {
    lw48.INFO,
    sw48.INFO,
    lw64.INFO,
    sw64.INFO,
    instruction.INFO
  };

  private static final IOperation.IInfo[] __OP_GROUPS = new IOperation.IInfo[] {
  };

  public Model() {
    super(
        NAME,
        __MODES,
        __MODE_GROUPS,
        __OPS,
        __OP_GROUPS,
        __REGISTERS,
        __MEMORY,
        __LABELS,
        __STATUSES,
        __RESETTER
        );
  }

  public static void printInformation() {
    final Model model = new Model();

    final MetaModelPrinter metaModelPrinter = new MetaModelPrinter(model.getMetaData());
    metaModelPrinter.printAll();

    final ModelStatePrinter modelStatePrinter = new ModelStatePrinter(model);
    modelStatePrinter.printRegisters();
  }

  public static void main(String[] args) {
    printInformation();
  }
}
 