/*
 * Copyright (c) ISPRAS
 * 
 * Institute for System Programming of Russian Academy of Sciences
 * 
 * 25 Alexander Solzhenitsyn st. Moscow 109004 Russia
 * 
 * All rights reserved.
 * 
 * This file was automatically generated by MicroTEST based on the
 * information contained in the 'large_addr.nml' specification file.
 * 
 * N.B. PLEASE DO NOT MODIFY THIS FILE.
 */

package ru.ispras.microtesk.model.large_addr.mode;

import java.util.Map;
import java.math.BigInteger;
import ru.ispras.microtesk.model.api.type.*;
import ru.ispras.microtesk.model.api.data.*;
import ru.ispras.microtesk.model.api.memory.Location;
import ru.ispras.microtesk.model.api.instruction.IAddressingMode;
import ru.ispras.microtesk.model.api.instruction.AddressingMode;

import static ru.ispras.microtesk.model.large_addr.shared.Shared.*;

public final class r64 extends AddressingMode {
  public static final String NAME = "r64";

  private static final class Info extends InfoAndRule {
    Info()
    {
        super(
           r64.class,
           "r64",
           WORD64,
           new ParamDecls()
               .declareParam("index", Type.CARD(0x6))
        );
    }

    @Override
    public IAddressingMode create(Map<String, Data> args)
    {
        final Location index = getArgument("index", args);
        return new r64(index);
    }
  }

  public static final IInfo INFO = new Info();

  private final Location index;

  public r64(Location index)
  {
      this.index = index;
  }

  @Override
  public String syntax()
  {
      return String.format("$r%d", index.load().getRawData().intValue());
  }

  @Override
  public Location access()
  {
      return GPR64.access(index.load());
  }
}
 