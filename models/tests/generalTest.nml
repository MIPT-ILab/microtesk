// JUST GENERAL TESTS
// OR SOME MIXED-CONSTRUCT TESTS

let SIZE = 10
let REGS = 16

//let REGS = 11

//let byte = 11

type MYTYPE         = card(SIZE)

type BYTE           = card(8)
type CHAR           = int(8)

type WORD           = card(16)
type SHORT          = int(16)

type DWORD          = card(32)
type LONG           = int(32)
  
type bit 			= card(1)
//type byte1		= card(8)

type byte1			= card(8)
type byte2			= byte1

mem TEST_MEM1 [REGS*2, card(32)]

reg TEST_REG1 [REGS,   DWORD]
var TEST_VAR1 [REGS,   LONG]

mem TEST_MEM2 [2*REGS,    card(32)]
reg TEST_REG2 [2*REGS+1,  card(2**8)]

// let AA = TEST_MEM1[1]
