================================================================================
 MicroTESK Builds
================================================================================

--------------------------------------------------------------------------------
 2015/03/24 MicroTESK 2.2 alpha
--------------------------------------------------------------------------------

 2015/05/22 MicroTESK 2.2.2 alpha

 The new build contains the following changes:

 - Simple mechanism for detecting loops in test templates was implemented. If
   the number of branch executions exceeds the specified limit, test generation
   is halted.
 - New attribute 'init' was supported for 'mode' and 'op' nML primitives. It
   specifies initialization actions to be performed each time before code
   of other standard attributes like 'syntax' and 'image' is executed.
 - The repetition operator was implemented in nML. Syntax is the following:
   {N}X - concatenates the specified location X with itself N times.
 - Branches of logic in nML specifications which raise exceptions are
   automatically marked as named test situations.
 - Syntax of the 'reg', 'mem' and 'var' nML constructs was extended to support
   array-based aliases.
 - Functionality of 'format' and 'trace' nML functions was improved. Now they
   support conditional string-based expressions as arguments.
 - Default values for some command-line options are now stored in
   a configuration file.
 - Several bug fixes and general improvements were made.

 2015/04/23 MicroTESK 2.2.1 alpha

 The new build contains the following changes:

 - Support for the CVC4 constraint solver
 - Several bug fixes and general code improvements

 2015/03/24 MicroTESK 2.2.0 alpha

 The new build contains the following changes:

 - Support for automated extraction of coverage information that allows building
   constraints for named instruction execution paths
 - Possibility to process test templates in a stream manner (block by block) 
   was implemented, which allows processing larger test templates
 - The "trace" method (test templates) now accepts objects created
   by the "rand" method
 - Several bug fixes and general improvements were made
 
--------------------------------------------------------------------------------
 2014/10/18 MicroTESK 2.1 beta
--------------------------------------------------------------------------------

 2015/03/05 MicroTESK 2.1.5 beta

 The new build contains the following changes:

 - The random_seed setting was added to test templates
 - Biased random generation was supported
 - The miniMIPS specification was improved
 - More test templates for miniMIPS were added

 2015/02/19 MicroTESK 2.1.4 beta
 
 The new build contains the following changes:

 - The logic of test sequence building and processing has been improved
 - The format of generated test programs has been improved
 - Several bug fixes and general improvements have been made

 2015/02/17 MicroTESK 2.1.3 beta

 The new build contains the following changes:

 - Several bug fixes and general improvements have been made

 2014/12/30 MicroTESK 2.1.2 beta

 The new build contains the following changes:

 - Facilities to describe the data segment in test templates were implemented  
 - Function 'trace' (nML) was supported
 - Possibility to create instances of modes and ops in nML code was implemented 
 - Aliases for memory locations (mem, reg, var) were supported 
 - Specification of the miniMIPS ISA was added to examples 

 2014/10/31 MicroTESK 2.1.1 beta

 The new build contains the following changes:

 - Issue related to processing test templates under Windows was fixed

 2014/10/18 MicroTESK 2.1.0 beta

 The new build contains the following changes:

 - Support for VLIW was implemented
 - Support for floating-point types was implemented
 - Ability to specify initialization code in test templates
   (the 'preparator' construct) was implemented
 - New test data generators were implemented
 - The test templates library was improved (including new text printing
   facilities and ability to specify unknown immediate values)
 - New examples of test templates demonstrating features of MicroTESK
   were added  
 - Ability to use labels rather than addresses in the generated code
   was implemented

--------------------------------------------------------------------------------
 2014/03/20 MicroTESK 2.0 beta
--------------------------------------------------------------------------------

 2014/04/18 MicroTESK 2.0.2 beta

 The new build contains the following changes:

 - An ability to manually specify initialization code was implemented
 - The test templates library was improved
 - Test template examples for ARM were updated
 - Several bugs related to installation of MicroTESK were fixed
 - Default test situations Random and Zero were provided

 2014/03/20 MicroTESK 2.0.1 beta

 MicroTESK is an open-source framework for generating test programs for
 microprocessors. It is customized for a specific microprocessor architecture
 with formal specifications in nML/Sim-nML. Test programs are generated on a
 basis of test templates, which are abstract descriptions of test scenarios.
 Flexible and convenient Ruby-based test template language allows creating a
 wide range of tests (from random to directed) with minimal efforts.

--------------------------------------------------------------------------------
 2013/02/22 MicroTESK 2.0 alpha
--------------------------------------------------------------------------------
 2009/08/20 MicroTESK 1.0 beta
--------------------------------------------------------------------------------
 Since 2007 MicroTESK 0.0 alpha
--------------------------------------------------------------------------------
