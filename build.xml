<?xml version="1.0" encoding="utf-8"?>
<project name="microtesk" default="build" basedir=".">

  <!-- Directories -->
  <property name="src"  location="src"/>
  <property name="gen"  location="gen"/>
  <property name="out"  location="output"/>
  <property name="bin"  location="bin"/>
  <property name="dist" location="dist/jars"/>
  <property name="doc"  location="doc"/>

  <property name="microtesk.bin" value="${bin}/microtesk"/>

  <!-- Output JAR-file -->
  <property name="jar" value="microtesk.jar"/>
  <!-- Main package -->
  <property name="root.package" value="ru"/>
  <property name="main.package" value="${root.package}/ispras/microtesk"/>

  <!-- External JARs -->
  <property name="junit.jar"     value="junit-4.10.jar"/>
  <property name="antlr.jar"     value="antlr-3.4-complete.jar"/>
  <property name="antlr.ant.jar" value="ant-antlr3.jar"/>
  <property name="cli.jar"       value="commons-cli-1.2.jar"/>
  <property name="jruby.jar"     value="jruby.jar"/>
  <property name="solver.jar"    value="fortress.jar"/>

  <!-- Information for the JAR manifest -->
  <property name="jar.jars.path" value="./../../jars"/>
  <property name="jar.mainclass" value="ru.ispras.microtesk.MicroTESK"/>	
  <property name="jar.classpath" value="${jar.jars.path}/${junit.jar} ${jar.jars.path}/${antlr.jar} ${jar.jars.path}/${cli.jar} ${jar.jars.path}/${jruby.jar} ${jar.jars.path}/${solver.jar}"/>

  <!-- Classpath for external libraries -->
  <property name="jars.path" value="./jars"/>
  <property name="classpath" value="${jars.path}/${junit.jar}:${jars.path}/${antlr.jar}:${jars.path}/${antlr.ant.jar}:${jars.path}/${cli.jar}:${jars.path}/${jruby.jar}:${jars.path}/${solver.jar}"/>

  <!-- Grammar files -->
  <!-- Sim-nML -->
  <property name="simnml_grammar.package" value="translator/simnml/grammar"/>
  <property name="simnml_grammar.path"    value="${main.package}/${simnml_grammar.package}"/>
  <property name="simnml_lexer.name"      value="SimnMLLexer.g"/>
  <property name="simnml_parser.name"     value="SimnMLParser.g"/>
  <property name="simnml_walker.name"     value="SimnMLTreeWalker.g"/>
	
  <!-- MMU --> 	
  <property name="mmu_grammar.package" value="translator/mmu/grammar"/>
  <property name="mmu_grammar.path"    value="${main.package}/${mmu_grammar.package}"/>
  <property name="mmu_lexer.name"      value="MMuLexer.g"/>
  <property name="mmu_parser.name"     value="MMuParser.g"/>
  <property name="mmu_walker.name"     value="MMuTreeWalker.g"/>

  <!-- Options -->
  <property name="debug" value="false"/>

  <!-- Macro for ANTRL targets -->
  <macrodef name="antlr3">
  	<attribute name="grammar.path"/>
    <attribute name="grammar.name"/>
	<sequential>
	  <echo message="antlr @{grammar.name}"/>
	  <antlr:ant-antlr3
	    xmlns:antlr="antlib:org/apache/tools/ant/antlr"
	    target="${src}/@{grammar.path}/@{grammar.name}"
	    outputdirectory="${gen}/@{grammar.path}"
	    debug="${debug}"
	  >
	    <classpath>
	      <pathelement path="${classpath}"/>
	    </classpath>
	  </antlr:ant-antlr3>
    </sequential>
  </macrodef>

  <!-- Default target -->
  <target name="build" depends="init,simnml_antlr,mmu_antlr">
    <property name="microtesk.bin" value="${bin}/microtesk"/>
    <mkdir dir="${microtesk.bin}"/>
    <javac
      srcdir="${src}:${gen}"
      destdir="${microtesk.bin}"
      source="1.6"
      classpath="${classpath}"
      includeantruntime="true"
    />
    <jar destfile="${dist}/${jar}" basedir="${microtesk.bin}">
      <manifest>
        <attribute name="Main-Class" value="${jar.mainclass}"/>
        <attribute name="Class-Path" value="${jar.classpath}"/>
      </manifest>
    </jar>
  </target>

  <!-- Target for building models -->
  <target name="build_models">
    <property name="models.classpath"     value="${dist}/${jar}"/>
    <property name="models.jar.classpath" value="${jar}"/>
    <property name="models.bin"           value="${bin}/models"/>
    <property name="models.jar"           value="${dist}/models.jar"/>

    <mkdir dir="${models.bin}"/>
    <javac
      srcdir="${out}"
      destdir="${models.bin}"
      source="1.6"
      classpath="${models.classpath}"
      includeantruntime="true"
    />
    <jar destfile="${models.jar}" basedir="${models.bin}">
      <manifest>
        <!-- <attribute name="Main-Class" value="${jar.mainclass}"/> -->
        <attribute name="Class-Path" value="${models.jar.classpath}"/>
      </manifest>
    </jar>
  </target>

  <!-- Target for generating parsers from grammars with antlr -->
  <target name="simnml_antlr">
    <antlr3 grammar.name="${simnml_lexer.name}"  grammar.path="${simnml_grammar.path}"/>
  	<antlr3 grammar.name="${simnml_parser.name}" grammar.path="${simnml_grammar.path}"/>
  	<antlr3 grammar.name="${simnml_walker.name}" grammar.path="${simnml_grammar.path}"/>
  </target>
	
  <target name="mmu_antlr">
    <antlr3 grammar.name="${mmu_lexer.name}"  grammar.path="${mmu_grammar.path}"/>
    <antlr3 grammar.name="${mmu_parser.name}" grammar.path="${mmu_grammar.path}"/>
  	<antlr3 grammar.name="${mmu_walker.name}" grammar.path="${mmu_grammar.path}"/>
  </target>

  <!-- Init target, creates dirs -->
  <target name="init">
    <mkdir dir="${gen}/${simnml_grammar.path}"/>
    <mkdir dir="${gen}/${mmu_grammar.path}"/>
    <mkdir dir="${bin}"/>
    <mkdir dir="${dist}"/>
  </target>

  <!-- Clean target, removes builded dirs and files -->
  <target name="clean">
    <delete dir="${dist}"/>
    <delete dir="${bin}"/>
    <delete dir="${gen}/${root.package}"/>
    <delete dir="${out}/${root.package}"/>
    <delete dir="${doc}"/>
  </target>

  <!-- JUnit target (compile and run unit tests) -->
  <target name="junit" depends="build">
    <path id="classpath.test">
      <pathelement location="${classpath}"/>
      <pathelement location="${microtesk.bin}"/>
    </path>

    <junit fork="no" printsummary="yes" showoutput="yes">
      <classpath refid="classpath.test"/>
      <formatter type="plain" usefile="false"/>

      <batchtest haltonfailure="no">
        <fileset dir="${src}" includes="**/tests/*TestCase*.java"/>
      </batchtest>
    </junit>
  </target>
	
  <!-- JavaDoc target, generates documentation for source code in ${src} and places it into ${doc} -->
  <target name="doc" depends="init,simnml_antlr,mmu_antlr">
    <mkdir dir="${doc}"/> 
    <javadoc
      sourcepath="${src}:${gen}"
      destdir="${doc}"
      classpath="${classpath}"
      author="true"
    />
  </target>

</project>
