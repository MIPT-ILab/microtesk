(*
 * Copyright 2018 ISP RAS (http://www.ispras.ru)
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 *)

theory BV64
  constant size                : int = 64
  constant two_power_size      : int = 0x1_0000_0000_0000_0000
  constant half_two_power_size : int = 0x8000_0000_0000_0000

  use int.Int (* needed to use range types *)
  use ispras.bvgen.BV_Gen

  type bv64 = < range 0 0xFFFF_FFFF_FFFF_FFFF >

  clone export ispras.bvgen.BV_Gen with
    type t = bv64,
    (*function to_int = t'int,*)
    constant size = size,
    constant two_power_size = two_power_size,
    constant half_two_power_size = half_two_power_size,
    constant max_int = bv64'maxInt,
    goal size_pos,
    goal two_power_size_val,
    goal half_two_power_size_val,
    goal max_int_val

end
