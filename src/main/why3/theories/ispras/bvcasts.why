(*
 * Copyright 2018 ISP RAS (http://www.ispras.ru)
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 *)

(* Generic theory for concatenating two Bit Vectors of arbitrary lengths. *)
theory BVConcat_Gen
  type firstBV
  type secondBV
  type resultBV

  function concat firstBV secondBV : resultBV
end

(* Generic theory for extracting fields of a Bit Vector of an arbitrary length. *)
theory BVExtract_Gen
  type fromBV
  type resultBV

  function extract fromBV int int : resultBV
end

(* Generic theory for casting Bit Vectors of an arbitrary length. *)
theory BVCast_Gen
  type bigBV
  type smallBV

  predicate in_small_range bigBV

  function to_uint_small smallBV : int
  function to_uint_big bigBV : int

  function toBig smallBV : bigBV
  function toSmall bigBV : smallBV

  function signExtend smallBV : bigBV
  function zeroExtend smallBV : bigBV

  axiom toSmall_to_uint :
    forall x:bigBV. in_small_range x ->
      to_uint_big x = to_uint_small (toSmall x)

  axiom toBig_to_uint :
    forall x:smallBV.
      to_uint_small x = to_uint_big (toBig x)

end
