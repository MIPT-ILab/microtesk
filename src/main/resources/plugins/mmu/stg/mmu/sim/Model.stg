/*
 * Copyright 2015 ISP RAS (http://www.ispras.ru)
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */

group Model;

body(name, mem_type, buf_type, buffers, memories) ::= <<
private final Map\<String, <buf_type>\> buffers;
private final Map\<String, <mem_type>\> memories;

public <name>() {
  this.buffers = newBuffers();
  this.memories = newMemories();
}

private static Map\<String, <buf_type>\> newBuffers() {
  final Map\<String, <buf_type>\> result = new HashMap\<\>();
  <buffers : {b | result.put("<b>", <b>.get());}; separator="\n">
  return result;
}

private static Map\<String, <mem_type>\> newMemories() {
  final Map\<String, <mem_type>\> result = new HashMap\<\>();
  <memories : {m | result.put("<m>", new <m>());}; separator="\n">
  return result;
}

@Override
public <buf_type> getBufferObserver(final String bufferId) {
  return buffers.get(bufferId);
}

@Override
public <mem_type> getMemoryAccessor(final String deviceId) {
  return memories.get(deviceId);
}
>>
