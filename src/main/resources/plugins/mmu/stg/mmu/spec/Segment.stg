/*
 * Copyright 2015 ISP RAS (http://www.ispras.ru)
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */

group Segment;

constructor(name, va, pa, start, end, mapped, va_expr, pa_expr, stmts) ::= <<
private <name>() {
  this("<name>");
}<\n>
private <name>(final String name) {
  super(
      "<name>",
      <va>.get(),
      <pa>.get(),
      <start>,
      <end>,
      <mapped>,
      <va_expr>,
      <pa_expr>
  );
  <if(stmts)><\n><stmts; separator="\n"><endif>
}
>>

constructor_memory(name, stmts) ::= <<
private <name>() {
  this("<name>");
}<\n>
private <name>(final String name) {
  <stmts; separator="\n">
}
>>

function(name, members) ::= <<
<function_methods()><\n>
<class(["public", "static", "final"],
       name,
       false,
       false,
       members)>
>>

function_constructor(name, stmts) ::= <<
private <name>(final int instanceIndex) {
  this(String.format("<name>_%d", instanceIndex));
}<\n>
private <name>(final String name) {
  <if(stmts)><stmts; separator="\n"><endif>
}
>>

function_methods() ::= <<
private final List\<Function\> functions = new ArrayList\<Function\>();<\n>
public final Function newCall(final MmuSubsystem.Builder builder) {
  final Function result = new Function(functions.size());
  result.registerControlFlow(builder);

  functions.add(result);
  return result;
}<\n>
public final Function currentCall() {
  return functions.get(functions.size() - 1);
}
>>
