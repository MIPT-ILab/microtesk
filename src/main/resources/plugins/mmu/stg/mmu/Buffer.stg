/*
 * Copyright 2015 ISP RAS (http://www.ispras.ru)
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */

group Buffer;

buffer(pack, imps, name, base, members) ::= <<
<header(false)>
<package(pack)>
<if(imps)><imports(imps)><endif>
<class(["public", "final"],
       name,
       base,
       false,
       [singleton(name, "instance"), members])>
>>

entry(fields) ::= <<
<class(["public", "static", "final"],
       "Entry",
       "Data",
       false,
       entry_constructor(fields))>
>>

entry_constructor(fields) ::= <<
public Entry() {
  <fields; separator="\n">
}
>>

field(name, arg) ::= <<
defineField("<name>", <arg>);
>>

indexer(addr_type, addr_name) ::= <<
private static final Indexer\<<addr_type>\> INDEXER = new Indexer\<<addr_type>\>() {
  @Override
  public BitVector getIndex(final <addr_type> <addr_name>) {
    // TODO 
    return null;
  }
};
>>

matcher(addr_type, addr_name, data_name) ::= <<
private static final Matcher\<Entry, <addr_type>\> MATCHER = new Matcher\<Entry, <addr_type>\>() {
  @Override
  public boolean areMatching(final Entry <data_name>, final <addr_type> <addr_name>) {
    // TODO
    return false;
  }
};
>>

constructor(name, ways, sets, policy) ::= <<
private <name>() {
  super(
    new BigInteger("<sets>", 10),
    <ways>,
    <policy>,
    INDEXER,
    MATCHER
    );
}
>>
