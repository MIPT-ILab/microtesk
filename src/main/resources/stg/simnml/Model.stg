/*
 * Copyright (c) 2012 ISPRAS
 * 
 * Institute for System Programming of Russian Academy of Sciences
 * 
 * 25 Alexander Solzhenitsyn st. Moscow 109004 Russia
 * 
 * All rights reserved.
 * 
 * Model.stg, Dec 5, 2012 4:11:52 PM Andrei Tatarnikov
 */

group Model;
 
model(file, pack, imps, simps, base, members) ::= <<
<header(file)>
<package(pack)>
<if(imps)><imports(imps)><endif>
<if(simps)><static_imports(simps)><endif>
<class(["public", "final"], 
       "Model",
       base,
       false,
       members)> 
>>

constructor(isaclass, reg, mem, lab, stat, inits) ::= <<
private final IInitializerGenerator[] __INITIALIZERS;

public Model()
{
    super(
        new <isaclass>(),
        <reg>,
        <mem>,
        <lab>,
        <stat>
        );

    this.__INITIALIZERS = new IInitializerGenerator[]
    {
        <inits:{n |new <n>(this)}; separator=",\n">
    };
}

@Override
public IInitializerGenerator[] getInitializers()
{
    return __INITIALIZERS;
}
>>

debug_block() ::= <<
<\n>public static void printInformation()
{
    final Model model = new Model();

    final MetaModelPrinter metaModelPrinter = new MetaModelPrinter(model.getMetaData());
    metaModelPrinter.printAll();

    final ModelStatePrinter modelStatePrinter = new ModelStatePrinter(model);
    modelStatePrinter.printRegisters();
}

public static void main(String[] args)
{
    printInformation();
}
>>
